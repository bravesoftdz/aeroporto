unit UFrmCadastroEstadoTeste;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, UFrmCRUD, StdCtrls, Buttons, PwCtrls, ExtCtrls
  , UEstado
  , UUtilitarios
  , URegraCadastroEstado
  , UEntidade
  , URegraCRUD
  ;

type
  TFrmCadastroEstadoTeste = class(TFrmCRUD)
    gbInformacoes: TGroupBox;
    lbNome: TLabel;
    lbUF: TLabel;
    edNome: TEdit;
    edUF: TEdit;
  private
    FRegrasCadastroEstado: TRegraCadastroEstado;

  protected
    procedure HabilitaCampos(const ceTipoOperacaoUsuario: TTipoOperacaoUsuario); override;
    procedure LimpaCampos; override;
    procedure Inicializa; override;
    procedure PreencheEntidade(const coENTIDADE: TENTIDADE); override;
    procedure PreencheFormulario(const  coENTIDADE: TENTIDADE); override;
    procedure PosicionaCursorPrimeiroCampo; override;

    function RetornaDescricaoEntidade: String; override;

  public
    constructor Create(const coOwner: TComponent;
                       const coClassEntidade: TClassENTIDADE;
                       const coClassRegra: TClassRegraCRUD);

    class procedure MostraFormulario(const coOwner: TComponent);
  end;

implementation

{$R *.dfm}

uses
    UMensagens
  ;

{ TFrmCadastroEstadoTeste }

constructor TFrmCadastroEstadoTeste.Create(const coOwner: TComponent;
                                           const coClassENTIDADE: TClassENTIDADE;
                                           const coClassRegra: TClassRegraCRUD);
begin
  Inherited Create(coOwner, TESTADO, TRegraCadastroEstado);
end;

procedure TFrmCadastroEstadoTeste.HabilitaCampos(const ceTipoOperacaoUsuario: TTipoOperacaoUsuario);
begin
  inherited;

end;

procedure TFrmCadastroEstadoTeste.Inicializa;
begin
  inherited;

end;

procedure TFrmCadastroEstadoTeste.LimpaCampos;
begin
  inherited;

end;

class procedure TFrmCadastroEstadoTeste.MostraFormulario(const coOwner: TComponent);
begin

end;

procedure TFrmCadastroEstadoTeste.PosicionaCursorPrimeiroCampo;
begin
  inherited;

end;

procedure TFrmCadastroEstadoTeste.PreencheEntidade(const coENTIDADE: TENTIDADE);
begin
  inherited;

end;

procedure TFrmCadastroEstadoTeste.PreencheFormulario(const coENTIDADE: TENTIDADE);
begin
  inherited;

end;

function TFrmCadastroEstadoTeste.RetornaDescricaoEntidade: String;
begin
  Result := STR_ESTADO;
end;


end.
