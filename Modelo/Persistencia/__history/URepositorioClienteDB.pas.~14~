unit URepositorioClienteDB;

interface

uses
    URepositorioDB
  , URepositorioCidadeDB
  , UDM
  , UCliente
  , UCidade
  , SysUtils
  , SQLExpr
  ;

type
  TRepositorioClienteDB = class(TRepositorioDB<TCLIENTE>)
  private
    FRepositorioCidadeDB: TRepositorioCidadeDB;

    procedure AtribuiEntidadeParaDB(const coCLIENTE: TCLIENTE;
                                   const coSQLQuery: TSQLQuery); override;
    procedure AtribuiDBParaEntidade(const coCLIENTE: TCLIENTE); override;

  public
    constructor Create;
  end;

implementation

uses
    DB
  ;

{ TRepositorioClienteDB }

constructor TRepositorioClienteDB.Create;
begin
  Inherited Create(TBL_CLIENTE, FLD_CLIENTE_ID);
  FRepositorioCidadeDB := TRepositorioCidadeDB.Create;
end;

procedure TRepositorioClienteDB.AtribuiEntidadeParaDB(const coCLIENTE: TCLIENTE;
                                                      const coSQLQuery: TSQLQuery);
begin
  with coSQLQuery do
  begin
    ParamByName(FLD_CLIENTE_ID             ).AsInteger  := FID;
    ParamByName(FLD_CLIENTE_NOME           ).AsString   := coCLIENTE.NOME;
    ParamByName(FLD_CLIENTE_CPF            ).AsString   := coCLIENTE.CPF;
    ParamByName(FLD_CLIENTE_SEXO           ).AsSmallInt := Ord(coCLIENTE.SEXO);
    ParamByName(FLD_CLIENTE_ESTADO_CIVIL   ).AsSmallInt := Ord(coCLIENTE.ESTADO_CIVIL);
    ParamByName(FLD_CLIENTE_DATA_NASCIMENTO).AsDate     := coCLIENTE.DATA_NASCIMENTO;
    ParamByName(FLD_CLIENTE_POSSUI_VEICULO ).AsString   := IntToStr(Ord(coCLIENTE.POSSUI_VEICULO));
    ParamByName(FLD_CLIENTE_RENDA_MENSAL   ).AsFloat    := coCLIENTE.RENDA_MENSAL;

    //Se o objeto chegar aqui com valor zero para cidade, deve gravar/atualizar para nulo.
    if coCLIENTE.CIDADE.ID = 0 then
      begin
        ParamByName(FLD_CLIENTE_IDCIDADE).DataType := ftInteger;
        ParamByName(FLD_CLIENTE_IDCIDADE).Clear;
      end
    else
      ParamByName(FLD_CLIENTE_IDCIDADE).AsInteger := coCLIENTE.CIDADE.ID;
  end;
end;

procedure TRepositorioClienteDB.AtribuiDBParaEntidade(const coCLIENTE: TCLIENTE);
begin
  with UDM.dmProway.SQLSelect do
  begin
    coCLIENTE.ID              :=              FieldByName(FLD_CLIENTE_ID             ).AsInteger;
    coCLIENTE.NOME            :=              FieldByName(FLD_CLIENTE_NOME           ).AsString;
    coCLIENTE.CPF             :=              FieldByName(FLD_CLIENTE_CPF            ).AsString;
    coCLIENTE.SEXO            :=        TSexo(FieldByName(FLD_CLIENTE_SEXO           ).AsInteger);
    coCLIENTE.ESTADO_CIVIL    := TEstadoCivil(FieldByName(FLD_CLIENTE_ESTADO_CIVIL   ).AsInteger);
    coCLIENTE.DATA_NASCIMENTO :=              FieldByName(FLD_CLIENTE_DATA_NASCIMENTO).AsDateTime;
    coCLIENTE.POSSUI_VEICULO  :=      Boolean(FieldByName(FLD_CLIENTE_POSSUI_VEICULO ).AsInteger);
    coCLIENTE.RENDA_MENSAL    :=              FieldByName(FLD_CLIENTE_RENDA_MENSAL   ).AsFloat;

    if  not FieldByName(FLD_CLIENTE_IDCIDADE).IsNull then
        coCLIENTE.CIDADE := FPersisteCidade.Retorna(FieldByName(FLD_CLIENTE_IDCIDADE).AsInteger);
  end;
end;

end.
